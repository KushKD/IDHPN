

CREATE TABLE mst_state (
    state_id serial PRIMARY KEY  NOT NULL,
    state_name character varying(50) NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone
);


CREATE TABLE mst_district (
    district_id serial PRIMARY KEY  NOT NULL,
    district_name character varying(50) NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
     state_id INTEGER NOT NULL,
     FOREIGN KEY (state_id) REFERENCES mst_state(state_id)
);


-- Inter State , Intra State
CREATE TABLE mst_barrier_type (
    barrier_type_id serial PRIMARY KEY  NOT NULL,
    barrier_type_name character varying(50) NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone
);

CREATE TABLE mst_barrier (
    barrier_id serial PRIMARY KEY  NOT NULL,
    barrier_name character varying(50) NOT NULL,
    district_id INTEGER NOT NULL,
    barrier_type_id INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
    FOREIGN KEY (district_id) REFERENCES mst_district(district_id),
    FOREIGN KEY (barrier_type_id) REFERENCES mst_barrier_type(barrier_type_id)
);



-- Trucks , Trallas , Light Commercial Vechicle
CREATE TABLE mst_vehicle_type (
    vehicle_type_id serial PRIMARY KEY  NOT NULL,
    vehicle_type_name character varying(50) NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone
);

-- Driver Conductor Other
CREATE TABLE mst_vehicle_owner_type (
    vehicle_owner_type_id serial PRIMARY KEY  NOT NULL,
    vehicle_owner_name character varying(100) NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone
);

-- Vehicle User Entries
CREATE TABLE mst_vehicle_owner_entries (
    vehicle_owner_id serial PRIMARY KEY  NOT NULL,
    id_card_number character varying(50) NOT NULL,
    district_id INTEGER NOT NULL,
    barrier_id INTEGER NOT NULL,
    vehicle_type_id INTEGER NOT NULL,
    vehicle_owner_type_id INTEGER NOT NULL,
    vehicle_owner_name character varying(50) NOT NULL, 
    vehicle_owner_imagename character varying(50) NOT NULL,
    vehicle_owner_mobile_number INTEGER NOT NULL,
    id_valid_from DATE NOT NULL,
    id_valid_upto DATE NOT NULL,
    vehicle_owner_aadhaar_number INTEGER NOT NULL,
    vehicle_owner_vehicle_number character varying(15) NOT NULL,
    vehicle_owner_chassis_number character varying(30) NOT NULL,
    vehicle_owner_engine_number character varying(30) NOT NULL,
    vehicle_owner_driving_licence character varying(15) NOT NULL,
    mobile_information character varying(100) NOT NULL,
    other_information character varying(255) NOT NULL,
    data_entered_by INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
    FOREIGN KEY (data_entered_by) REFERENCES users(user_id),
    FOREIGN KEY (district_id) REFERENCES mst_district(district_id),
    FOREIGN KEY (barrier_id) REFERENCES mst_barrier(barrier_id), 
    FOREIGN KEY (vehicle_type_id) REFERENCES mst_vehicle_type(vehicle_type_id),
    FOREIGN KEY (vehicle_owner_type_id) REFERENCES mst_vehicle_owner_type(vehicle_owner_type_id)
);

-- Vehicle User photo Byte
CREATE TABLE mst_vehicle_owner_documents (
    doc_id serial PRIMARY KEY  NOT NULL,
    vehicle_owner_id INTEGER NOT NULL,
    vehicle_image_owner bytea NOT NULL,
    uploaded_by INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
    FOREIGN KEY (vehicle_owner_id) REFERENCES mst_vehicle_owner_entries(vehicle_owner_id),
    FOREIGN KEY (uploaded_by) REFERENCES users(user_id)
);



-- Users
CREATE TABLE users(
user_id SERIAL PRIMARY KEY NOT NULL,
username character varying (50),
password character varying (50),
mobile_number INTEGER,
active boolean DEFAULT true NOT NULL,
createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
lastmodifieddate timestamp without time zone

);

--Roles
CREATE TABLE roles(
role_id SERIAL PRIMARY KEY NOT NULL,
role_name character varying (15),
role_description character varying (55),
active boolean DEFAULT true NOT NULL,
createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
lastmodifieddate timestamp without time zone

)

-- Role Mapping
CREATE TABLE user_role_mapping(
id SERIAL PRIMARY KEY NOT NULL,
user_id INTEGER NOT NULL,
role_id INTEGER NOT NULL,
active boolean DEFAULT true NOT NULL,
createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
lastmodifieddate timestamp without time zone
FOREIGN KEY (user_id) REFERENCES users(user_id),
FOREIGN KEY (role_id) REFERENCES roles(role_id)

)

-- OTP Table
CREATE TABLE otp_login(
id SERIAL PRIMARY KEY NOT NULL,
mobile_number INTEGER NOT NULL,
otp INTEGER NOT NULL,
active boolean DEFAULT true NOT NULL,
createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
lastmodifieddate timestamp without time zone

)


--HelpFul Queries

SELECT * From mst_vehicle_owner_entries WHERE to_char(createddate, 'DD-MM-YYYY')=to_char(DATE  '26/06/2020', 'DD-MM-YYYY')


--Date Wise no of Vehicle types
SELECT mvt.vehicle_type_name, count(mvoe.vehicle_owner_id) From mst_vehicle_owner_entries mvoe
inner join mst_vehicle_type mvt on mvt.vehicle_type_id=mvoe.vehicle_type_id
WHERE to_char(mvoe.createddate, 'DD/MM/YYYY')='26/06/2020' AND mvoe.vehicle_type_id = 1
group by mvt.vehicle_type_name

--Date
SELECT to_char(mvoe.createddate, 'DD-MM-YYYY'),mvt.vehicle_type_name, count(mvoe.vehicle_owner_id) From mst_vehicle_owner_entries mvoe
inner join mst_vehicle_type mvt on mvt.vehicle_type_id=mvoe.vehicle_type_id
--WHERE to_char(mvoe.createddate, 'DD/MM/YYYY')='26/06/2020'
group by mvt.vehicle_type_name, to_char(mvoe.createddate, 'DD-MM-YYYY')

select * from public.mst_vehicle_owner_entries where  district_id=196 AND barrier_id=7
order by createddate desc


select to_char(createddate, 'DD-MM-YYYY hh:mm:ss PM') from public.mst_vehicle_owner_entries where  district_id=196 AND barrier_id=7
order by createddate desc



SELECT to_char(mvoe.createddate, 'DD-MM-YYYY'),mvt.vehicle_type_name, count(mvoe.vehicle_owner_id) From mst_vehicle_owner_entries mvoe
inner join mst_vehicle_type mvt on mvt.vehicle_type_id=mvoe.vehicle_type_id
--WHERE to_char(mvoe.createddate, 'DD-MM-YYYY')=to_char(DATE  '26/06/2020', 'DD-MM-YYYY')
group by mvt.vehicle_type_name, to_char(mvoe.createddate, 'DD-MM-YYYY') ORDER BY to_char(mvoe.createddate, 'DD-MM-YYYY') ASC

-- Create Shimla Active and Rest Inactive
update mst_district SET active= false WHERE state_id = 9 AND district_id != 204

-- Insert Shimla Barriers
INSERT INTO mst_barrier ( barrier_name, district_id,barrier_type_id, active) VALUES ('shogi', 204, 1,true);
INSERT INTO mst_barrier ( barrier_name, district_id,barrier_type_id, active) VALUES ('Fagu', 204, 1,true);
INSERT INTO mst_barrier ( barrier_name, district_id,barrier_type_id, active) VALUES ('Balag', 204, 1,true);

-- Check Barriers In Shimla District
SELECT * FROM mst_barrier as barrier
INNER JOIN mst_district as district ON  district.district_id = barrier.district_id
WHERE district.district_id=204;

-- ALter Table Command (Added Two Columns)
ALTER TABLE  mst_vehicle_owner_entries ADD COLUMN vehicle_owner_address character varying (255);
ALTER TABLE  mst_vehicle_owner_entries ADD COLUMN vehicle_driver_address character varying (255);
ALTER TABLE  mst_vehicle_owner_entries ADD COLUMN card_created_on character varying (255);

-- Change Integer to bigint vehicle_owne_entries and transInout

--Logs Table
CREATE TABLE log_vahan_service (
    log_id serial PRIMARY KEY  NOT NULL,
    log_user_id INTEGER NOT NULL,
	log_ip_address  character varying(20),
	log_service_response_code INTEGER NOT NULL,
	log_vehicle_number character varying(40),
	log_application_name character varying(40),
	log_function_name character varying(40),
    is_active boolean NOT NULL DEFAULT true,
    createddate timestamp with time zone NOT NULL DEFAULT now(),
    FOREIGN KEY (log_user_id) REFERENCES users(user_id)

);

-- Change Integer to BigInt log_id

ALTER TABLE  log_vahan_service ADD COLUMN engine_number character varying (100);
ALTER TABLE  log_vahan_service ADD COLUMN chassis_number character varying (100);
ALTER TABLE  log_vahan_service ADD COLUMN rc_status character varying (100);
ALTER TABLE  log_vahan_service ADD COLUMN rc_registered_at character varying (100);
ALTER TABLE  log_vahan_service ADD COLUMN reg_no character varying (100);
ALTER TABLE  log_vahan_service ADD COLUMN rc_fit_upto character varying (100);
ALTER TABLE  log_vahan_service ADD COLUMN rc_status_as_on_date character varying (100);

-- Changes Table
ALTER TABLE  log_vahan_service ADD COLUMN rc_owner_name character varying (100);

-- java -cp x.jar service.App